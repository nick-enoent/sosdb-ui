"""
Django settings for sosgui project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import json

log = open('/tmp/settings.log', 'a')
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'tgi*mct^mr^%d=@(e5ix#!elxk5q3i3(&zzbt-!5op-#%h3!h9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
	'smtp.ogc.us',
	'10.10.0.15',
	'www.opengridcomputing.com',
]


APPEND_SLASH = False


# Application definition

INSTALLED_APPS = (
    'httpproxy',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'component',
    'container',
    'plot',
    'jobs',
    'objbrowser',
    'sos_db',
    # 'debug_toolbar',
)

try:
    import ldms_settings
    INSTALLED_APPS = INSTALLED_APPS + ldms_settings.INSTALLED_APPS
except:
    pass
try:
    import grafana_settings
    INSTALLED_APPS = INSTALLED_APPS + grafana_settings.INSTALLED_APPS
except:
    pass 

MIDDLEWARE_CLASSES = (
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'sosgui.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            '/var/www/sos_web_svcs/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sosgui.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

#CACHES = {
#    'default': {
#	'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#	'LOCATION': '/var/www/tmp/django_cache',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

#SESSION_FILE_PATH = '/tmp/sessions'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
#    '/static/',
    '/var/www/sos_web_svcs/static',
]

SOS_ROOT = "/btrfs"
LOG_FILE = "/var/www/sos_web_svcs/sosgui.log"
LOG_DATE_FMT = "%F %T"
ODS_LOG_FILE = "/var/www/sos_web_svcs/ods.log"
ODS_LOG_MASK = "255"
ODS_GC_TIMEOUT = 10
LDMS_SETTINGS = "/opt/ovis/etc/ldms.cfg"
SYSLOG_SETTINGS = "/opt/ovis/etc/syslog.cfg"
TIMEZONE=-(8*3600)



try:
    cfg_fp = open(LDMS_SETTINGS, 'r')
    LDMS_CFG = json.load(cfg_fp)
    log.write(repr(LDMS_CFG)+'\n')
except Exception, e:
    log.write(repr(e)+'\n')
    LDMS_CFG = { "aggregators" : [] }

try:
    cfg_fp = open(SYSLOG_SETTINGS, 'r')
    SYSLOG_CFG = json.load(cfg_fp)
except Exception as e:
    log.write(repr(e)+'\n')
    SYSLOG_CFG = { "stores" : [] }
